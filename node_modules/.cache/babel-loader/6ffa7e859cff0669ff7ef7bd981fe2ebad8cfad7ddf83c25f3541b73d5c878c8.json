{"ast":null,"code":"export const selectionSortMin = array => {\n  const trace = [];\n  console.log(array);\n  for (let p = 0; p < array.length; p++) {\n    let k = -1;\n    let min = array.length;\n    for (let i = p; i < array.length; i++) {\n      trace.push({\n        array: [...array],\n        active: [i],\n        lcurr: k,\n        rcurr: k + 1\n      });\n      if (array[i] < min) {\n        min = array[i];\n        k = i;\n      }\n    }\n    while (array[k] < array[k - 1] && k > 0) {\n      let temp = array[k];\n      array[k] = array[k - 1];\n      array[k - 1] = temp;\n      k--;\n      trace.push({\n        array: [...array],\n        active: [k],\n        lcurr: 0,\n        rcurr: p\n      });\n    }\n  }\n  for (let i = 0; i < array.length; i++) {\n    trace.push({\n      array: [...array],\n      active: [i],\n      lcurr: -1,\n      rcurr: -1\n    });\n  }\n  trace.push({\n    array: [...array],\n    active: [],\n    lcurr: -1,\n    rcurr: -1\n  });\n  return trace;\n};\nexport const selectionSortMax = array => {\n  const trace = [];\n  console.log(array);\n  for (let p = 0; p < array.length; p++) {\n    let k = -1;\n    let max = -1;\n    for (let i = 0; i < array.length - p; i++) {\n      trace.push({\n        array: [...array],\n        active: [i],\n        lcurr: k,\n        rcurr: k + 1\n      });\n      if (array[i] > max) {\n        max = array[i];\n        k = i;\n      }\n    }\n    while (array[k] > array[k + 1] && k + 1 < array.length) {\n      let temp = array[k];\n      array[k] = array[k + 1];\n      array[k + 1] = temp;\n      k++;\n      trace.push({\n        array: [...array],\n        active: [k],\n        lcurr: 0,\n        rcurr: p\n      });\n    }\n  }\n  for (let i = 0; i < array.length; i++) {\n    trace.push({\n      array: [...array],\n      active: [i],\n      lcurr: -1,\n      rcurr: -1\n    });\n  }\n  trace.push({\n    array: [...array],\n    active: [],\n    lcurr: -1,\n    rcurr: -1\n  });\n  return trace;\n};","map":{"version":3,"names":["selectionSortMin","array","trace","console","log","p","length","k","min","i","push","active","lcurr","rcurr","temp","selectionSortMax","max"],"sources":["C:/Users/hrshi/Desktop/Projects/algoVisualiser/Algorithm-Visualizer/src/algorithms/SelectionSort.js"],"sourcesContent":["export const selectionSortMin = (array) => {\r\n  const trace = [];\r\n\r\n  console.log(array);\r\n\r\n  for (let p = 0; p < array.length; p++) {\r\n    let k = -1;\r\n    let min = array.length;\r\n    for (let i = p; i < array.length; i++) {\r\n      trace.push({ array: [...array], active: [i], lcurr: k, rcurr: k + 1 });\r\n      if (array[i] < min) {\r\n        min = array[i];\r\n        k = i;\r\n      }\r\n    }\r\n    while (array[k] < array[k - 1] && k > 0) {\r\n      let temp = array[k];\r\n      array[k] = array[k - 1];\r\n      array[k - 1] = temp;\r\n      k--;\r\n      trace.push({\r\n        array: [...array],\r\n        active: [k],\r\n        lcurr: 0,\r\n        rcurr: p,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    trace.push({ array: [...array], active: [i], lcurr: -1, rcurr: -1 });\r\n  }\r\n  trace.push({ array: [...array], active: [], lcurr: -1, rcurr: -1 });\r\n\r\n  return trace;\r\n};\r\n\r\nexport const selectionSortMax = (array) => {\r\n  const trace = [];\r\n\r\n  console.log(array);\r\n\r\n  for (let p = 0; p < array.length; p++) {\r\n    let k = -1;\r\n    let max = -1;\r\n    for (let i = 0; i < array.length - p; i++) {\r\n      trace.push({ array: [...array], active: [i], lcurr: k, rcurr: k + 1 });\r\n      if (array[i] > max) {\r\n        max = array[i];\r\n        k = i;\r\n      }\r\n    }\r\n    while (array[k] > array[k + 1] && k + 1 < array.length) {\r\n      let temp = array[k];\r\n      array[k] = array[k + 1];\r\n      array[k + 1] = temp;\r\n      k++;\r\n      trace.push({\r\n        array: [...array],\r\n        active: [k],\r\n        lcurr: 0,\r\n        rcurr: p,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    trace.push({ array: [...array], active: [i], lcurr: -1, rcurr: -1 });\r\n  }\r\n  trace.push({ array: [...array], active: [], lcurr: -1, rcurr: -1 });\r\n\r\n  return trace;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}